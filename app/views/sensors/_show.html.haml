%h4.text-center
  = succeed ':' do
    = t 'sensors.name'
  = @sensor.name

%h4.text-center
  = succeed ':' do
    = t 'sensors.id'
  = @sensor.id

%h5.text-center
  = succeed ':' do
    = t 'sensors.current_location'
  - if location = @sensor.current_location
    = location.latitude
    = location.longitude
    = location.height
  - else
    = t 'sensors.no_location'

.text-center
  - pm_available = false
  - @readings.each do |measurement, _|
    - pm_available = pm_available || measurement.name.include?('pm')
    .reading-chart{ id: "#{measurement.name}-container" }

- if pm_available && !demo?
  %p
  %p
    = link_to t('sensors.show_reference'),
              '#',
              class: 'btn btn-primary',
              id: 'show-reference-button'

    #no-reference-error.alert.alert-danger.hidden= t('sensors.no_reference')


- @readings.each do |measurement, readings|
  :javascript
    $(function () {
      $('##{measurement.name}-container').highcharts({
        title: {
          text: '#{I18n.t('measurement.' + measurement.name)}',
          x: -20 //center
        },
        xAxis: {
          type: 'datetime',
          labels: {
            formatter: function() {
              return Highcharts.dateFormat('%H:%M', this.value*1000);
            },
          },
          plotLines: #{locations_to_plotlines(@locations)}
        },
        yAxis: {
          title: {
            text: '[#{measurement.unit}]'
          },
          plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
          }]
        },
        tooltip: {
          formatter: function () {
            return '<div class="tooltip">' + Highcharts.dateFormat('%e %b %H:%M:%S', this.x * 1000) + '<br/><b>' + Highcharts.numberFormat(this.y) + ' [#{measurement.unit}]</b></div>';
          }
        },
        series: [{
          name: '#{I18n.t('measurement.' + measurement.name)}',
          data: #{readings.map{ |r| [r.time.to_i, r.value.round(4)] }},
          showInLegend: false
        }]
      }, function(e) {
        setTimeout(function() {
          e.setSize($('##{measurement.name}-container').width(), $('##{measurement.name}-container').height());
        }, 1);
      });
    });
